package Test_1;

import java.util.ArrayList;
import java.util.List;

public class Graph {
	
	private Noeud root;
	private boolean visited;
	private int memoryIndice;
	public Tree() {
		visited = false;
		memoryIndice = 0;
	}
	
	
	
	public void inserer(String token) {
		if(root == null) {
			root = new Noeud(token);
			return;
		} else {
			if(root.equal(token) && !visited) {
				visited = true;
				return ;
			} else {
				
				test(root, memoryIndice, token);
			}
		}	
	}

	private void test(Noeud n, int i,String token) {
		if(n.isComplete()) {
			n.addFin(token);
			return;
		} else {
			for(int i = 0; i <= n.size(); i++) {
				if(!n.next(i).equal(token)) {
					
				}
			}
		}
	}
	
	
	
	public void dislay() {
		System.out.println("root : "+ root.getToken());
		for(Noeud n : root.List()) {
			System.out.println(" --> "+ n.getToken());
		}
	}
	
	
	
	
	

}
